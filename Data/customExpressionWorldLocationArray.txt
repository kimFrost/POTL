
float3 offset=float3(1,1,1);

//float2 WorldLocationUV = float2(0.01+0.005,0.5);
float2 WorldLocationUV = float2(5 * (1 / NumOfTileStates) + 0.005, 0.5);

float2 WorldLocation = Texture2DSampleLevel(WorldLocations,WorldLocationsSampler,WorldLocationUV,0.0).xy;


//WorldLocation = float2(-200, 0);


float2 UV = (wpos.xy + WorldLocation * -1) / float2(255, 294);


//return Texture2DSampleLevel(DrawTex, DrawTexSampler, UV, 0.0).xyz;


for(int i = 0; i < NumOfTileStates; i++) {        
	//loc = Texture2DSampleLevel(WorldLocations,WorldLocationsSampler,float2(float(i)*0.01+0.005,0.5),0.0).xyz;
	//WorldLocation = float2(loc.x,loc.y);
	
	//WorldLocationUV = float2(float(i)*0.01+0.005,0.5);
	WorldLocationUV = float2(float(i) * (1 / NumOfTileStates) + 0.005, 0.5);
	
	WorldLocation = Texture2DSampleLevel(WorldLocations,WorldLocationsSampler,WorldLocationUV,0.0).xy;
	UV = (wpos.xy + (WorldLocation) * -1 + float2(255, 294) / 2) / float2(255, 294);
	
	offset = offset * Texture2DSampleLevel(DrawTex, DrawTexSampler, UV, 0.0).xyz;
}

return offset;








r = 5 (input)
dist = 0.1 (input)

float3 blur = Texture2DSample(Tex, TexSampler, UV);

for (int i = 0; i < r; i++)
{

  blur += Texture2DSample(Tex, TexSampler, UV + float2(i * dist, 0));
  blur += Texture2DSample(Tex, TexSampler, UV - float2(i * dist, 0));
}
for (int j = 0; j < r; j++)
{ 

  blur += Texture2DSample(Tex, TexSampler, UV + float2(0, j * dist));
  blur += Texture2DSample(Tex, TexSampler, UV - float2(0, j * dist));
}

blur /= 2*(2*r)+1;
return blur;






float3 sphereloc= Texture2DSampleLevel(Tex,TexSampler,float2(0.01+0.005,0.5),0.0).xyz;
float3 offset=float3(0,0,0);
float numstep=100;

for(int i = 0; i < numstep; i++) {        
	sphereloc = Texture2DSampleLevel(Tex,TexSampler,float2(float(i)*0.01+0.005,0.5),0.0).xyz;
	offset += lerp(float3(0,0,-200), float3(0,0,0), clamp(distance(sphereloc,wpos)/150, 0,1));
}

return offset;